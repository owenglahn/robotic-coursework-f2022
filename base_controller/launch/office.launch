<launch>   

	<arg name="world_name" 			default="worlds/empty.world"/>
 	<arg name="joystick" 			default="false" />
	<arg name="robot_namespace" 	default="/"/>
	 <arg name="platform" default="$(optenv CPR_GAZEBO_PLATFORM husky)" />
	
  	<arg name="x" 	default="2.0"/>
  	<arg name="y" 	default="0.0"/>
  	<arg name="z" 	default="0.2"/>
  	<arg name="yaw" default="0.0"/>

	<arg name="config_extras" default="$(eval optenv('HUSKY_CONFIG_EXTRAS', find('husky_control') + '/config/empty.yaml'))"/>
  	<arg name="urdf_extras" default="$(optenv HUSKY_URDF_EXTRAS)"/>
			
  	<include file="$(find gazebo_ros)/launch/empty_world.launch">
	    <arg name="world_name" default="$(find cpr_office_gazebo)/worlds/office_world.world" />
	    <arg name="paused" 		value="true"/>
	    <arg name="use_sim_time" value="true"/>
	    <arg name="gui" 		value="true"/>
	    <arg name="headless" 	value="false"/>
	    <arg name="debug" 		value="false"/>
  	</include>
  	
    <param name="office_geom" command="$(find xacro)/xacro --inorder '$(find cpr_office_gazebo)/urdf/office_geometry.urdf.xacro'" />
    <node name="office_world_spawner" pkg="gazebo_ros" type="spawn_model" args="-urdf -model office_geom -param office_geom -x 0 -y 0 -z 0 -Y 0" />
    
	<group ns="$(arg robot_namespace)">

	<!-- Load robot description -->
  	<include file="$(find husky_description)/launch/description.launch" >
  	</include>

	<!-- Load controller configuration -->
  	<rosparam command="load" file="$(find husky_control)/config/control.yaml" />

  	<!-- Spawn controllers -->
  	<node name="base_controller_spawner" pkg="controller_manager" type="spawner"
    	    args="husky_joint_publisher husky_velocity_controller"/>
  	<node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" /> 
    
	<node name="spawn_husky_model" pkg="gazebo_ros" type="spawn_model"
        args="-x $(arg x)
              -y $(arg y)
              -z $(arg z)
              -Y $(arg yaw)
              -unpause
              -urdf
              -param robot_description
              -model husky
              -robot_namespace $(arg robot_namespace)" />              
  	</group>
  	
    <node pkg="base_controller" type="base_controller" name="base_controller" output="screen">
    	<rosparam command="load" file="$(dirname)/../config/office.yaml" />
    </node>
  
</launch>